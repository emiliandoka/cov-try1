{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import _slicedToArray from\"D:/lani new/prov-react/covidp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState}from\"react\";import ReactTooltip from\"react-tooltip\";//import MapChart from \"./map.comp\";\nimport'./map.comp.style.scss';import{ZoomableGroup,ComposableMap,Geographies,Geography}from\"react-simple-maps\";var geoUrl=\"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";/* function RGBAToHexA(r,g,b,a) {\r\n    r = r.toString(16);\r\n    g = g.toString(16);\r\n    b = b.toString(16);\r\n    a = Math.round(a * 255).toString(16);\r\n  \r\n    if (r.length == 1)\r\n      r = \"0\" + r;\r\n    if (g.length == 1)\r\n      g = \"0\" + g;\r\n    if (b.length == 1)\r\n      b = \"0\" + b;\r\n    if (a.length == 1)\r\n      a = \"0\" + a;\r\n  \r\n    return \"#\" + r + g + b + a;\r\n  } \r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    minimumFractionDigits: 2,      \r\n    maximumFractionDigits: 2,\r\n });*/var MapChart=function MapChart(setTooltipContent,props,handleclick,dontshowno){return/*#__PURE__*/_jsx(ComposableMap,{\"data-tip\":\"\",projectionConfig:{scale:200},children:/*#__PURE__*/_jsx(ZoomableGroup,{children:/*#__PURE__*/_jsx(Geographies,{geography:geoUrl,children:function children(_ref){var geographies=_ref.geographies;return geographies.map(function(geo){var value,index;var opacity=0;for(var i=0;i<props.length;i++){if(props[i].Country===geo.properties.NAME||props[i].Country===geo.properties.NAME_LONG||props[i].Country===geo.properties.FORMAL_EN){value=props[i].TotalConfirmed;index=i;break;}}if(value===undefined){opacity=0;value=0;}if(value<1000){opacity=0.1;}else if(value<180000){opacity=0.3;}else if(value<500000){opacity=0.7;}else{opacity=1;}return/*#__PURE__*/_jsx(Geography,{\"data-index\":index,geography:geo,onMouseEnter:function onMouseEnter(){var NAME=geo.properties.NAME;setTooltipContent(\"\".concat(NAME,\" \").concat(dontshowno?'':\"\\u2014 \".concat(value)));},onMouseLeave:function onMouseLeave(){setTooltipContent(\"\");},style:{default:{fill:\"#2E86C1\",outline:\"#D6EAF8\",stroke:'#21618C',fillOpacity:\"\".concat(opacity)},hover:{fill:\"#154360\",outline:\"#1C2833\"},pressed:{fill:\"#E42\",outline:\"#212F3C\"}},onClick:function onClick(e){return handleclick(e);}},geo.rsmKey);});}})})});};var Mapp=function Mapp(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),content=_useState2[0],setContent=_useState2[1];return/*#__PURE__*/_jsxs(\"div\",{className:\"Map\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"drag\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"far fa-hand-rock\"}),\" to move map\"]}),MapChart(setContent,props.data,props.handleclick,props.dontshowno),/*#__PURE__*/_jsx(ReactTooltip,{children:content})]});};export default Mapp;","map":{"version":3,"sources":["D:/lani new/prov-react/covidp/src/components/map/map.parent.jsx"],"names":["React","useState","ReactTooltip","ZoomableGroup","ComposableMap","Geographies","Geography","geoUrl","MapChart","setTooltipContent","props","handleclick","dontshowno","scale","geographies","map","geo","value","index","opacity","i","length","Country","properties","NAME","NAME_LONG","FORMAL_EN","TotalConfirmed","undefined","default","fill","outline","stroke","fillOpacity","hover","pressed","e","rsmKey","Mapp","content","setContent","data"],"mappings":"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","sourcesContent":["import React, { useState  }from \"react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n//import MapChart from \"./map.comp\";\r\nimport './map.comp.style.scss';\r\nimport {\r\n  ZoomableGroup,\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography\r\n} from \"react-simple-maps\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\n /* function RGBAToHexA(r,g,b,a) {\r\n    r = r.toString(16);\r\n    g = g.toString(16);\r\n    b = b.toString(16);\r\n    a = Math.round(a * 255).toString(16);\r\n  \r\n    if (r.length == 1)\r\n      r = \"0\" + r;\r\n    if (g.length == 1)\r\n      g = \"0\" + g;\r\n    if (b.length == 1)\r\n      b = \"0\" + b;\r\n    if (a.length == 1)\r\n      a = \"0\" + a;\r\n  \r\n    return \"#\" + r + g + b + a;\r\n  } \r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    minimumFractionDigits: 2,      \r\n    maximumFractionDigits: 2,\r\n });*/\r\n\r\nconst MapChart = ( setTooltipContent , props , handleclick , dontshowno ) => {\r\n \r\n  return (\r\n    \r\n      <ComposableMap data-tip=\"\" projectionConfig={{ scale: 200 }}>\r\n        <ZoomableGroup>\r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies.map(geo => {\r\n               var value,index; let opacity=0;\r\n               for(var i=0;i<props.length;i++){\r\n                 if(props[i].Country === geo.properties.NAME|| \r\n                  props[i].Country=== geo.properties.NAME_LONG || props[i].Country=== geo.properties.FORMAL_EN){\r\n                  value = props[i].TotalConfirmed; index = i;\r\n                  break; }\r\n                 }\r\n                 if(value===undefined){opacity=0; value= 0;}\r\n                 if(value<1000){opacity=0.1}\r\n                 else if(value<180000){opacity=0.3}\r\n                 else if(value<500000){opacity=0.7}\r\n                 else{opacity=1}\r\n               return (<Geography\r\n                  key={geo.rsmKey}\r\n                  data-index={index}\r\n                  \r\n                  geography={geo}\r\n                  onMouseEnter={() => {\r\n                    const { NAME} = geo.properties;\r\n                    setTooltipContent(`${NAME} ${dontshowno ? '' : `â€” ${value}`}`);\r\n                  }}\r\n                  onMouseLeave={() => {\r\n                    setTooltipContent(\"\");\r\n                  }}\r\n                  style={{\r\n                    default: {\r\n                      fill: `#2E86C1`,\r\n                      outline: \"#D6EAF8\",\r\n                      stroke: '#21618C',\r\n                      fillOpacity: `${opacity}`\r\n                    },\r\n                    hover: {\r\n                      fill: \"#154360\",\r\n                      outline: \"#1C2833\"\r\n                    },\r\n                    pressed: {\r\n                      fill: \"#E42\",\r\n                      outline: \"#212F3C\"\r\n                    }\r\n                  }}\r\n                  onClick={(e)=>handleclick(e)}/> )\r\n              })\r\n            }\r\n          </Geographies>\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n    \r\n  );\r\n};\r\n\r\n\r\nconst Mapp =(props) => {\r\n    const [content, setContent] = useState(\"\");\r\n    return (\r\n      <div className=\"Map\"> \r\n        <span className=\"drag\"><i className=\"far fa-hand-rock\"></i> to move map</span>\r\n        {MapChart(setContent , props.data , props.handleclick, props.dontshowno)}\r\n        <ReactTooltip>{content}</ReactTooltip>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default Mapp;"]},"metadata":{},"sourceType":"module"}