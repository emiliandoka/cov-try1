{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\prov-react\\\\covidp\\\\src\\\\components\\\\map\\\\map.parent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, memo } from \"react\";\nimport ReactTooltip from \"react-tooltip\"; //import MapChart from \"./map.comp\";\n\nimport './map.comp.style.scss';\nimport { ZoomableGroup, ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nfunction RGBAToHexA(r, g, b, a) {\n  r = r.toString(16);\n  g = g.toString(16);\n  b = b.toString(16);\n  a = Math.round(a * 255).toString(16);\n  if (r.length == 1) r = \"0\" + r;\n  if (g.length == 1) g = \"0\" + g;\n  if (b.length == 1) b = \"0\" + b;\n  if (a.length == 1) a = \"0\" + a;\n  return \"#\" + r + g + b + a;\n}\n\n_c = RGBAToHexA;\nconst formatter = new Intl.NumberFormat('en-US', {\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2\n});\n\nfunction max(data) {\n  var maxi = 0;\n\n  for (let i = 0; i < 192; i++) {\n    if (data[i].TotalConfirmed > maxi) maxi = data[i].TotalConfirmed;\n  }\n\n  return maxi;\n}\n\nconst MapChart = (setTooltipContent, props) => {\n  var maxi = max(props);\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    \"data-tip\": \"\",\n    projectionConfig: {\n      scale: 200\n    },\n    children: /*#__PURE__*/_jsxDEV(ZoomableGroup, {\n      children: /*#__PURE__*/_jsxDEV(Geographies, {\n        geography: geoUrl,\n        children: ({\n          geographies\n        }) => geographies.map(geo => {\n          var value, index;\n          let opacity = 0;\n\n          for (var i = 0; i < props.length; i++) {\n            if (props[i].Country === geo.properties.NAME) {\n              value = props[i].TotalConfirmed;\n              index = i;\n              break;\n            }\n          }\n\n          return /*#__PURE__*/_jsxDEV(Geography, {\n            \"data-name\": geo.properties.NAME,\n            geography: geo,\n            onMouseEnter: () => {\n              const {\n                NAME\n              } = geo.properties;\n              setTooltipContent(`${NAME} â€” ${props[index].TotalConfirmed.toLocaleString()}`);\n            },\n            onMouseLeave: () => {\n              setTooltipContent(\"\");\n            },\n            style: {\n              default: {\n                fill: `rgba(174, 214, 241, 1)`,\n                outline: \"none\",\n                fillOpacity: `${opacity}`\n              },\n              hover: {\n                fill: \"#2874A6\",\n                outline: \"#212F3C\"\n              },\n              pressed: {\n                fill: \"#E42\",\n                outline: \"#212F3C\"\n              }\n            }\n          }, geo.rsmKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n};\n\n_c2 = MapChart;\n\nconst Mapp = props => {\n  _s();\n\n  const [content, setContent] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Map\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"drag\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"far fa-hand-rock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 32\n      }, this), \" move map\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), MapChart(setContent, props.data), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Mapp, \"KPwtwb4lt1NZxOwnjhyyIoKb9lQ=\");\n\n_c3 = Mapp;\nexport default Mapp;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"RGBAToHexA\");\n$RefreshReg$(_c2, \"MapChart\");\n$RefreshReg$(_c3, \"Mapp\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/prov-react/covidp/src/components/map/map.parent.jsx"],"names":["React","useState","memo","ReactTooltip","ZoomableGroup","ComposableMap","Geographies","Geography","geoUrl","RGBAToHexA","r","g","b","a","toString","Math","round","length","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","max","data","maxi","i","TotalConfirmed","MapChart","setTooltipContent","props","scale","geographies","map","geo","value","index","opacity","Country","properties","NAME","toLocaleString","default","fill","outline","fillOpacity","hover","pressed","rsmKey","Mapp","content","setContent"],"mappings":"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","sourcesContent":["import React, { useState, memo  }from \"react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n//import MapChart from \"./map.comp\";\r\nimport './map.comp.style.scss';\r\nimport {\r\n  ZoomableGroup,\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography\r\n} from \"react-simple-maps\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\n  function RGBAToHexA(r,g,b,a) {\r\n    r = r.toString(16);\r\n    g = g.toString(16);\r\n    b = b.toString(16);\r\n    a = Math.round(a * 255).toString(16);\r\n  \r\n    if (r.length == 1)\r\n      r = \"0\" + r;\r\n    if (g.length == 1)\r\n      g = \"0\" + g;\r\n    if (b.length == 1)\r\n      b = \"0\" + b;\r\n    if (a.length == 1)\r\n      a = \"0\" + a;\r\n  \r\n    return \"#\" + r + g + b + a;\r\n  }\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    minimumFractionDigits: 2,      \r\n    maximumFractionDigits: 2,\r\n });\r\nfunction max(data){\r\n  var maxi=0;\r\n  for(let i=0; i<192;i++){\r\n    if(data[i].TotalConfirmed>maxi) maxi= data[i].TotalConfirmed;\r\n  }\r\n  return maxi;\r\n}\r\nconst MapChart = ( setTooltipContent ,props ) => {\r\n  var maxi = max(props);\r\n  return (\r\n    \r\n      <ComposableMap data-tip=\"\" projectionConfig={{ scale: 200 }}>\r\n        <ZoomableGroup>\r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies.map(geo => {\r\n               var value,index; let opacity=0;\r\n               for(var i=0;i<props.length;i++){\r\n                 if(props[i].Country === geo.properties.NAME){\r\n                  value = props[i].TotalConfirmed; index = i;\r\n                  break; }\r\n                 }\r\n               \r\n               return (<Geography\r\n                  key={geo.rsmKey}\r\n                  data-name={geo.properties.NAME}\r\n                  geography={geo}\r\n                  onMouseEnter={() => {\r\n                    const { NAME} = geo.properties;\r\n                    setTooltipContent(`${NAME} â€” ${props[index].TotalConfirmed.toLocaleString()}`);\r\n                  }}\r\n                  onMouseLeave={() => {\r\n                    setTooltipContent(\"\");\r\n                  }}\r\n                  style={{\r\n                    default: {\r\n                      fill: `rgba(174, 214, 241, 1)`,\r\n                      outline: \"none\",\r\n                      fillOpacity: `${opacity}`\r\n                    },\r\n                    hover: {\r\n                      fill: \"#2874A6\",\r\n                      outline: \"#212F3C\"\r\n                    },\r\n                    pressed: {\r\n                      fill: \"#E42\",\r\n                      outline: \"#212F3C\"\r\n                    }\r\n                  }}\r\n                /> )\r\n              })\r\n            }\r\n          </Geographies>\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n    \r\n  );\r\n};\r\n\r\n\r\nconst Mapp =(props) => {\r\n    const [content, setContent] = useState(\"\");\r\n    return (\r\n      <div className=\"Map\"> \r\n        <span className=\"drag\"><i className=\"far fa-hand-rock\"></i> move map</span>\r\n        {MapChart(setContent , props.data)}\r\n        <ReactTooltip>{content}</ReactTooltip>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default Mapp;"]},"metadata":{},"sourceType":"module"}