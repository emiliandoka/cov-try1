{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\prov-react\\\\covidp\\\\src\\\\components\\\\map\\\\map.parent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactTooltip from \"react-tooltip\"; //import MapChart from \"./map.comp\";\n\nimport './map.comp.style.scss';\nimport { ZoomableGroup, ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n/* function RGBAToHexA(r,g,b,a) {\r\n   r = r.toString(16);\r\n   g = g.toString(16);\r\n   b = b.toString(16);\r\n   a = Math.round(a * 255).toString(16);\r\n \r\n   if (r.length == 1)\r\n     r = \"0\" + r;\r\n   if (g.length == 1)\r\n     g = \"0\" + g;\r\n   if (b.length == 1)\r\n     b = \"0\" + b;\r\n   if (a.length == 1)\r\n     a = \"0\" + a;\r\n \r\n   return \"#\" + r + g + b + a;\r\n } \r\n const formatter = new Intl.NumberFormat('en-US', {\r\n   minimumFractionDigits: 2,      \r\n   maximumFractionDigits: 2,\r\n});*/\n\nconst MapChart = (setTooltipContent, props, handleclick) => {\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    \"data-tip\": \"\",\n    projectionConfig: {\n      scale: 200\n    },\n    children: /*#__PURE__*/_jsxDEV(ZoomableGroup, {\n      children: /*#__PURE__*/_jsxDEV(Geographies, {\n        geography: geoUrl,\n        children: ({\n          geographies\n        }) => geographies.map(geo => {\n          var value, index;\n          let opacity = 0;\n\n          for (var i = 0; i < props.length; i++) {\n            if (props[i].Country === geo.properties.NAME || props[i].Country === geo.properties.NAME_LONG || props[i].Country === geo.properties.FORMAL_EN) {\n              value = props[i].TotalConfirmed;\n              index = i;\n              break;\n            }\n          }\n\n          if (value < 1000) {\n            opacity = 0.1;\n          } else if (value < 180000) {\n            opacity = 0.3;\n          } else if (value < 500000) {\n            opacity = 0.7;\n          } else {\n            opacity = 1;\n          }\n\n          return /*#__PURE__*/_jsxDEV(Geography, {\n            \"data-index\": index,\n            geography: geo,\n            onMouseEnter: () => {\n              const {\n                NAME\n              } = geo.properties;\n              setTooltipContent(`${NAME} â€” ${value}`);\n            },\n            onMouseLeave: () => {\n              setTooltipContent(\"\");\n            },\n            style: {\n              default: {\n                fill: `#2E86C1`,\n                outline: \"#D6EAF8\",\n                stroke: '#21618C',\n                fillOpacity: `${opacity}`\n              },\n              hover: {\n                fill: \"#154360\",\n                outline: \"#1C2833\"\n              },\n              pressed: {\n                fill: \"#E42\",\n                outline: \"#212F3C\"\n              }\n            },\n            onClick: handleclick(e)\n          }, geo.rsmKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n\n_c = MapChart;\n\nconst Mapp = props => {\n  _s();\n\n  const [content, setContent] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Map\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"drag\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"far fa-hand-rock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 32\n      }, this), \" to move map\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), MapChart(setContent, props.data, props.handleclick), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Mapp, \"KPwtwb4lt1NZxOwnjhyyIoKb9lQ=\");\n\n_c2 = Mapp;\nexport default Mapp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapChart\");\n$RefreshReg$(_c2, \"Mapp\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/prov-react/covidp/src/components/map/map.parent.jsx"],"names":["React","useState","ReactTooltip","ZoomableGroup","ComposableMap","Geographies","Geography","geoUrl","MapChart","setTooltipContent","props","handleclick","scale","geographies","map","geo","value","index","opacity","i","length","Country","properties","NAME","NAME_LONG","FORMAL_EN","TotalConfirmed","default","fill","outline","stroke","fillOpacity","hover","pressed","e","rsmKey","Mapp","content","setContent","data"],"mappings":"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","sourcesContent":["import React, { useState  }from \"react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n//import MapChart from \"./map.comp\";\r\nimport './map.comp.style.scss';\r\nimport {\r\n  ZoomableGroup,\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography\r\n} from \"react-simple-maps\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\n /* function RGBAToHexA(r,g,b,a) {\r\n    r = r.toString(16);\r\n    g = g.toString(16);\r\n    b = b.toString(16);\r\n    a = Math.round(a * 255).toString(16);\r\n  \r\n    if (r.length == 1)\r\n      r = \"0\" + r;\r\n    if (g.length == 1)\r\n      g = \"0\" + g;\r\n    if (b.length == 1)\r\n      b = \"0\" + b;\r\n    if (a.length == 1)\r\n      a = \"0\" + a;\r\n  \r\n    return \"#\" + r + g + b + a;\r\n  } \r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    minimumFractionDigits: 2,      \r\n    maximumFractionDigits: 2,\r\n });*/\r\n\r\nconst MapChart = ( setTooltipContent , props , handleclick ) => {\r\n \r\n  return (\r\n    \r\n      <ComposableMap data-tip=\"\" projectionConfig={{ scale: 200 }}>\r\n        <ZoomableGroup>\r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies.map(geo => {\r\n               var value,index; let opacity=0;\r\n               for(var i=0;i<props.length;i++){\r\n                 if(props[i].Country === geo.properties.NAME|| \r\n                  props[i].Country=== geo.properties.NAME_LONG || props[i].Country=== geo.properties.FORMAL_EN){\r\n                  value = props[i].TotalConfirmed; index = i;\r\n                  break; }\r\n                 }\r\n                 if(value<1000){opacity=0.1}\r\n                 else if(value<180000){opacity=0.3}\r\n                 else if(value<500000){opacity=0.7}\r\n                 else{opacity=1}\r\n               return (<Geography\r\n                  key={geo.rsmKey}\r\n                  data-index={index}\r\n                  \r\n                  geography={geo}\r\n                  onMouseEnter={() => {\r\n                    const { NAME} = geo.properties;\r\n                    setTooltipContent(`${NAME} â€” ${value}`);\r\n                  }}\r\n                  onMouseLeave={() => {\r\n                    setTooltipContent(\"\");\r\n                  }}\r\n                  style={{\r\n                    default: {\r\n                      fill: `#2E86C1`,\r\n                      outline: \"#D6EAF8\",\r\n                      stroke: '#21618C',\r\n                      fillOpacity: `${opacity}`\r\n                    },\r\n                    hover: {\r\n                      fill: \"#154360\",\r\n                      outline: \"#1C2833\"\r\n                    },\r\n                    pressed: {\r\n                      fill: \"#E42\",\r\n                      outline: \"#212F3C\"\r\n                    }\r\n                  }}\r\n                  onClick={handleclick(e)}/> )\r\n              })\r\n            }\r\n          </Geographies>\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n    \r\n  );\r\n};\r\n\r\n\r\nconst Mapp =(props) => {\r\n    const [content, setContent] = useState(\"\");\r\n    return (\r\n      <div className=\"Map\"> \r\n        <span className=\"drag\"><i className=\"far fa-hand-rock\"></i> to move map</span>\r\n        {MapChart(setContent , props.data , props.handleclick)}\r\n        <ReactTooltip>{content}</ReactTooltip>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default Mapp;"]},"metadata":{},"sourceType":"module"}